// THIS FILE IS AUTOGENERATED
// IT IS NOT STANDALONE. IT IS A FUNCTION LIST FOR THE Hart CLASS

#define __UDB_CONSTEXPR_FUNC_CALL
#define __UDB_CONST_GLOBAL(global_name) <%= name_of(:hart, cfg_arch) %>::global_name
#define __UDB_MUTABLE_GLOBAL(global_name) global_name
#define __UDB_STRUCT(struct_name) <%= name_of(:cfg, cfg_arch) %>_ ## struct_name ## _Struct
#define __UDB_STATIC_PARAM(param_name) <%= name_of(:params, cfg_arch) %>::param_name ## _VALUE

<%# need to get symtab at function scope -%>
<%- symtab = cfg_arch.symtab.global_clone.push(nil) -%>
<%- cfg_arch.functions.each do |func| -%>
<%- next unless func.builtin? -%>
<%- next if func.name == "cached_translation" # hack for now: return type isn't default constructible -%>
<%- next if func.name == "read_physical_memory" # hack for now: return type isn't default constructible -%>
<%- next if func.name == "abort_current_instruction" %>
//
// <%= func.description.gsub("\n", "\n// ") %>
<%= func.gen_cpp_prototype(symtab, 0, include_semi: false) %> {
  <%- unless func.gen_return_type(symtab) == "void" -%>
  static_assert(std::is_default_constructible_v<<%= func.gen_return_type(symtab) %>>, "Return type is not default constructible");
  <%= func.gen_return_type(symtab) %> ret;
  return ret;
  <%- end -%>
}

<%- end -%>

struct BuiltinFunctions {
<%- cfg_arch.functions.each do |func| -%>
<%- next unless func.builtin? -%>
  <%- args = func.gen_c_argument_list(symtab) -%>
  <%= func.gen_c_return_type(symtab) %> (*<%= func.name.gsub("?", "_Q_") %>)(<%= args %>);
<%- end -%>
};
<%- symtab.release -%>


#undef __UDB_CONSTEXPR_FUNC_CALL
#undef __UDB_CONST_GLOBAL
#undef __UDB_MUTABLE_GLOBAL
#undef __UDB_STRUCT
#undef __UDB_STATIC_PARAM
